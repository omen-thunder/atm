/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'org.springframework.boot'


sourceCompatibility = 16
targetCompatibility = 16

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations {
    providedRuntime
}

// Use the static files built from the frontend vue project
sourceSets {
    main {
        resources {
            srcDir '../frontend/build/dist'
        }
    }
}

processResources.dependsOn ':frontend:npmBuild'

dependencies {


    // This dependency is used by the application.
//    implementation 'com.google.guava:guava:30.1.1-jre'

    // Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test Frameworks
    testImplementation'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

}

testResultsDirName = "$buildDir/test-results"

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
    // reports.html.required = false
    if (System.getProperty('spring.datasource.url')){
        systemProperties['spring.datasource.url'] = System.getProperty('spring.datasource.url')
    }
}


jar {
    enabled = false
}



